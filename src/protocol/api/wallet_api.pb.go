// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/wallet_api.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
	core "protocol/protocol/core"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SignatureTxMessage struct {
	Transaction          *core.Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Password             string            `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SignatureTxMessage) Reset()         { *m = SignatureTxMessage{} }
func (m *SignatureTxMessage) String() string { return proto.CompactTextString(m) }
func (*SignatureTxMessage) ProtoMessage()    {}
func (*SignatureTxMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_b908ef7aa6413587, []int{0}
}

func (m *SignatureTxMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureTxMessage.Unmarshal(m, b)
}
func (m *SignatureTxMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureTxMessage.Marshal(b, m, deterministic)
}
func (m *SignatureTxMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureTxMessage.Merge(m, src)
}
func (m *SignatureTxMessage) XXX_Size() int {
	return xxx_messageInfo_SignatureTxMessage.Size(m)
}
func (m *SignatureTxMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureTxMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureTxMessage proto.InternalMessageInfo

func (m *SignatureTxMessage) GetTransaction() *core.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SignatureTxMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AddressPasswordHashMessage struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Hash                 []byte   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressPasswordHashMessage) Reset()         { *m = AddressPasswordHashMessage{} }
func (m *AddressPasswordHashMessage) String() string { return proto.CompactTextString(m) }
func (*AddressPasswordHashMessage) ProtoMessage()    {}
func (*AddressPasswordHashMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_b908ef7aa6413587, []int{1}
}

func (m *AddressPasswordHashMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressPasswordHashMessage.Unmarshal(m, b)
}
func (m *AddressPasswordHashMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressPasswordHashMessage.Marshal(b, m, deterministic)
}
func (m *AddressPasswordHashMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressPasswordHashMessage.Merge(m, src)
}
func (m *AddressPasswordHashMessage) XXX_Size() int {
	return xxx_messageInfo_AddressPasswordHashMessage.Size(m)
}
func (m *AddressPasswordHashMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressPasswordHashMessage.DiscardUnknown(m)
}

var xxx_messageInfo_AddressPasswordHashMessage proto.InternalMessageInfo

func (m *AddressPasswordHashMessage) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressPasswordHashMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddressPasswordHashMessage) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type SignatureMessage struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignatureMessage) Reset()         { *m = SignatureMessage{} }
func (m *SignatureMessage) String() string { return proto.CompactTextString(m) }
func (*SignatureMessage) ProtoMessage()    {}
func (*SignatureMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_b908ef7aa6413587, []int{2}
}

func (m *SignatureMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureMessage.Unmarshal(m, b)
}
func (m *SignatureMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureMessage.Marshal(b, m, deterministic)
}
func (m *SignatureMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureMessage.Merge(m, src)
}
func (m *SignatureMessage) XXX_Size() int {
	return xxx_messageInfo_SignatureMessage.Size(m)
}
func (m *SignatureMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureMessage proto.InternalMessageInfo

func (m *SignatureMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type PasswordMessage struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PasswordMessage) Reset()         { *m = PasswordMessage{} }
func (m *PasswordMessage) String() string { return proto.CompactTextString(m) }
func (*PasswordMessage) ProtoMessage()    {}
func (*PasswordMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_b908ef7aa6413587, []int{3}
}

func (m *PasswordMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordMessage.Unmarshal(m, b)
}
func (m *PasswordMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordMessage.Marshal(b, m, deterministic)
}
func (m *PasswordMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordMessage.Merge(m, src)
}
func (m *PasswordMessage) XXX_Size() int {
	return xxx_messageInfo_PasswordMessage.Size(m)
}
func (m *PasswordMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordMessage proto.InternalMessageInfo

func (m *PasswordMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AddressMessage struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressMessage) Reset()         { *m = AddressMessage{} }
func (m *AddressMessage) String() string { return proto.CompactTextString(m) }
func (*AddressMessage) ProtoMessage()    {}
func (*AddressMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_b908ef7aa6413587, []int{4}
}

func (m *AddressMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressMessage.Unmarshal(m, b)
}
func (m *AddressMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressMessage.Marshal(b, m, deterministic)
}
func (m *AddressMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressMessage.Merge(m, src)
}
func (m *AddressMessage) XXX_Size() int {
	return xxx_messageInfo_AddressMessage.Size(m)
}
func (m *AddressMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressMessage.DiscardUnknown(m)
}

var xxx_messageInfo_AddressMessage proto.InternalMessageInfo

func (m *AddressMessage) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*SignatureTxMessage)(nil), "protocol.SignatureTxMessage")
	proto.RegisterType((*AddressPasswordHashMessage)(nil), "protocol.AddressPasswordHashMessage")
	proto.RegisterType((*SignatureMessage)(nil), "protocol.SignatureMessage")
	proto.RegisterType((*PasswordMessage)(nil), "protocol.PasswordMessage")
	proto.RegisterType((*AddressMessage)(nil), "protocol.AddressMessage")
}

func init() { proto.RegisterFile("api/wallet_api.proto", fileDescriptor_b908ef7aa6413587) }

var fileDescriptor_b908ef7aa6413587 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0xed, 0x7e, 0x9f, 0x68, 0x33, 0x2d, 0x56, 0x06, 0x85, 0xb8, 0xf4, 0x50, 0x16, 0x0f, 0x45,
	0xb0, 0x95, 0x7a, 0xf0, 0x2c, 0x2a, 0x78, 0x11, 0x25, 0x16, 0x3c, 0xca, 0xd8, 0xae, 0x4d, 0x20,
	0x64, 0xc3, 0xee, 0x4a, 0xfd, 0xcd, 0xfe, 0x0a, 0x61, 0xdb, 0xcd, 0xc6, 0x18, 0xf4, 0x94, 0xcc,
	0x9b, 0x97, 0xf7, 0xe6, 0x4d, 0x06, 0x0e, 0xa9, 0xcc, 0xa6, 0x6b, 0xca, 0x73, 0x69, 0x5f, 0xa8,
	0xcc, 0x26, 0xa5, 0x56, 0x56, 0x61, 0xd7, 0x3d, 0x16, 0x2a, 0xe7, 0x83, 0x85, 0xd2, 0x72, 0x3a,
	0xd7, 0xaa, 0xd8, 0xb4, 0x44, 0x06, 0xf8, 0x94, 0xad, 0x0a, 0xb2, 0xef, 0x5a, 0xce, 0x3f, 0xee,
	0xa5, 0x31, 0xb4, 0x92, 0x78, 0x09, 0x3d, 0xab, 0xa9, 0x30, 0xb4, 0xb0, 0x99, 0x2a, 0x62, 0x36,
	0x62, 0xe3, 0xde, 0xec, 0x68, 0xe2, 0x65, 0x26, 0xf3, 0xd0, 0x4c, 0xea, 0x4c, 0xe4, 0xd0, 0x2d,
	0xc9, 0x98, 0xb5, 0xd2, 0xcb, 0xf8, 0xdf, 0x88, 0x8d, 0xa3, 0xa4, 0xaa, 0xc5, 0x1b, 0xf0, 0xab,
	0xe5, 0x52, 0x4b, 0x63, 0x1e, 0xb7, 0xd0, 0x1d, 0x99, 0xd4, 0x5b, 0xc6, 0xb0, 0x47, 0x9b, 0xae,
	0xb3, 0x8b, 0x12, 0x5f, 0xfe, 0xa6, 0x89, 0x08, 0x3b, 0x29, 0x99, 0x34, 0xfe, 0x3f, 0x62, 0xe3,
	0x7e, 0xe2, 0xde, 0xc5, 0x39, 0x1c, 0x54, 0x91, 0xbc, 0xfa, 0x10, 0x22, 0xe3, 0x31, 0xa7, 0xdf,
	0x4f, 0x02, 0x20, 0xce, 0x60, 0xe0, 0x47, 0xf2, 0x1f, 0xd4, 0x4d, 0x59, 0x23, 0xc8, 0x29, 0xec,
	0x6f, 0x83, 0xfc, 0x39, 0xfc, 0xec, 0x93, 0x01, 0x84, 0xff, 0x81, 0xb7, 0xd0, 0xbf, 0xd6, 0x92,
	0xac, 0x7c, 0x76, 0x18, 0x1e, 0x87, 0x9d, 0x36, 0x26, 0xe0, 0x71, 0x68, 0x7d, 0x77, 0x13, 0x1d,
	0x7c, 0x80, 0xa8, 0x8a, 0x88, 0x27, 0x3f, 0x88, 0x2d, 0xfb, 0xe5, 0x3c, 0xb0, 0x9a, 0xdb, 0x11,
	0x1d, 0xbc, 0x81, 0x5e, 0xed, 0x0c, 0x70, 0xd8, 0x42, 0xae, 0xae, 0x83, 0xb7, 0x1f, 0x82, 0xe8,
	0xbc, 0xee, 0x3a, 0xfc, 0xe2, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x79, 0x47, 0x8d, 0x66, 0x86, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WalletApiClient is the client API for WalletApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletApiClient interface {
	CreateWallet(ctx context.Context, in *PasswordMessage, opts ...grpc.CallOption) (*AddressMessage, error)
	Signature(ctx context.Context, in *AddressPasswordHashMessage, opts ...grpc.CallOption) (*SignatureMessage, error)
	SignatureTx(ctx context.Context, in *SignatureTxMessage, opts ...grpc.CallOption) (*core.Transaction, error)
}

type walletApiClient struct {
	cc *grpc.ClientConn
}

func NewWalletApiClient(cc *grpc.ClientConn) WalletApiClient {
	return &walletApiClient{cc}
}

func (c *walletApiClient) CreateWallet(ctx context.Context, in *PasswordMessage, opts ...grpc.CallOption) (*AddressMessage, error) {
	out := new(AddressMessage)
	err := c.cc.Invoke(ctx, "/protocol.wallet_api/CreateWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletApiClient) Signature(ctx context.Context, in *AddressPasswordHashMessage, opts ...grpc.CallOption) (*SignatureMessage, error) {
	out := new(SignatureMessage)
	err := c.cc.Invoke(ctx, "/protocol.wallet_api/Signature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletApiClient) SignatureTx(ctx context.Context, in *SignatureTxMessage, opts ...grpc.CallOption) (*core.Transaction, error) {
	out := new(core.Transaction)
	err := c.cc.Invoke(ctx, "/protocol.wallet_api/SignatureTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletApiServer is the server API for WalletApi service.
type WalletApiServer interface {
	CreateWallet(context.Context, *PasswordMessage) (*AddressMessage, error)
	Signature(context.Context, *AddressPasswordHashMessage) (*SignatureMessage, error)
	SignatureTx(context.Context, *SignatureTxMessage) (*core.Transaction, error)
}

func RegisterWalletApiServer(s *grpc.Server, srv WalletApiServer) {
	s.RegisterService(&_WalletApi_serviceDesc, srv)
}

func _WalletApi_CreateWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletApiServer).CreateWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.wallet_api/CreateWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletApiServer).CreateWallet(ctx, req.(*PasswordMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletApi_Signature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressPasswordHashMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletApiServer).Signature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.wallet_api/Signature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletApiServer).Signature(ctx, req.(*AddressPasswordHashMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _WalletApi_SignatureTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignatureTxMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletApiServer).SignatureTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.wallet_api/SignatureTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletApiServer).SignatureTx(ctx, req.(*SignatureTxMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _WalletApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.wallet_api",
	HandlerType: (*WalletApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWallet",
			Handler:    _WalletApi_CreateWallet_Handler,
		},
		{
			MethodName: "Signature",
			Handler:    _WalletApi_Signature_Handler,
		},
		{
			MethodName: "SignatureTx",
			Handler:    _WalletApi_SignatureTx_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/wallet_api.proto",
}
